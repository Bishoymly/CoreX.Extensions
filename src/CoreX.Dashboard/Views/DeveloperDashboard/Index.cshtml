@model CoreX.Extensions.Metrics.IMetricsService
@{
    Layout = null;
}

<!DOCTYPE html>

<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="generator" content="CoreX.Extension.Metrics">
    <title>CoreX Developer Dashboard</title>
    <!-- Bootstrap core CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css" integrity="sha384-TX8t27EcRE3e/ihU7zmQxVncDAy5uIKz4rEkgIXeMed4M0jlfIDPvg6uqKI2xXr2" crossorigin="anonymous">
    <script src="https://kit.fontawesome.com/e80d3696e6.js" crossorigin="anonymous"></script>
    @*<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ho+j7jyWK8fNQe+A12Hb8AhRq26LrZ/JpcUGGOn+Y7RsweNrtN/tE3MoK7ZeZDyx" crossorigin="anonymous"></script>*@
    <script src="/devdashcontent/js/signalr.min.js"></script>
    <script src="/devdashcontent/js/realtime.js"></script>
    <link rel="apple-touch-icon" sizes="57x57" href="/devdashcontent/icon/apple-icon-57x57.png">
    <link rel="apple-touch-icon" sizes="60x60" href="/devdashcontent/icon/apple-icon-60x60.png">
    <link rel="apple-touch-icon" sizes="72x72" href="/devdashcontent/icon/apple-icon-72x72.png">
    <link rel="apple-touch-icon" sizes="76x76" href="/devdashcontent/icon/apple-icon-76x76.png">
    <link rel="apple-touch-icon" sizes="114x114" href="/devdashcontent/icon/apple-icon-114x114.png">
    <link rel="apple-touch-icon" sizes="120x120" href="/devdashcontent/icon/apple-icon-120x120.png">
    <link rel="apple-touch-icon" sizes="144x144" href="/devdashcontent/icon/apple-icon-144x144.png">
    <link rel="apple-touch-icon" sizes="152x152" href="/devdashcontent/icon/apple-icon-152x152.png">
    <link rel="apple-touch-icon" sizes="180x180" href="/devdashcontent/icon/apple-icon-180x180.png">
    <link rel="icon" type="image/png" sizes="192x192" href="/devdashcontent/icon/android-icon-192x192.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/devdashcontent/icon/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="96x96" href="/devdashcontent/icon/favicon-96x96.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/devdashcontent/icon/favicon-16x16.png">
    <link rel="manifest" href="/devdashcontent/icon/manifest.json">
    <meta name="msapplication-TileColor" content="#ffffff">
    <meta name="msapplication-TileImage" content="/devdashcontent/icon/ms-icon-144x144.png">
    <meta name="theme-color" content="#ffffff">
    <style>
        .text-success {
            color: #12ca93 !important
        }

        .text-warning {
            color: #ecb22f !important
        }

        .text-danger {
            color: #e95f6a !important
        }

        .table.anim td {
            padding: 0;
        }

        .table.anim tr td div {
            padding: 0 0.7rem;
            box-sizing: border-box;
            max-height: 0px;
            opacity: 0;
        }

        .table.anim tr.in td div {
            padding: 0.7rem;
            max-height: 50px;
            opacity: 1;
            transition: max-height 0.3s, padding 0.3s, opacity 0.3s;
        }

        .table th {
            border-top: 0;
        }

        .nounderline {
            text-decoration: none !important;
            color: #000;
        }

        .card-title {
            margin: .75rem -.2rem;
        }

        .logo {
            width: 76px;
        }
    </style>
</head>
<body class="bg-light">
    <div class="container">
        <div class="py-5 text-center">
            <h2><img src="/devdashcontent/images/corex.png" class="logo" /> Developer Dashboard</h2>
            <p class="lead">This dashboard is meant for developers monitoring and troubleshooting their service. It's not supposed to be used in production without authorization.</p>
            <div class="row justify-content-md-center">
                <div class="col-2">
                    <a href="/swagger" target="_blank" class="nounderline">
                        <div class="card">
                            <div class="card-body">
                                <img src="/devdashcontent/images/swagger.png" class="card-img-top" />
                                <h5 class="card-title">Swagger</h5>
                            </div>
                        </div>
                    </a>
                </div>
                <div class="col-2">
                    <a href="/log" target="_blank" class="nounderline">
                        <div class="card">
                            <div class="card-body">
                                <img src="/devdashcontent/images/logs.png" class="card-img-top" />
                                <h5 class="card-title">Logs</h5>
                            </div>
                        </div>
                    </a>
                </div>
                <div class="col-2">
                    <a href="/healthz" target="_blank" class="nounderline">
                        <div class="card">
                            <div class="card-body">
                                <img src="/devdashcontent/images/healthz.png" class="card-img-top" />
                                
                                <h5 class="card-title text-black-50 healthz-checking"><i class="fas fa-sync-alt"></i> Checking</h5>
                                <h5 class="card-title text-black-50 healthz-none d-none"><i class="fas fa-circle-notch"></i> N/A</h5>
                                <h5 class="card-title text-success healthz-healthy d-none"><i class="fas fa-check-circle"></i> Healthy</h5>
                                <h5 class="card-title text-danger healthz-unhealthy d-none"><i class="fas fa-times-circle"></i> Unhealthy</h5>
                            </div>
                        </div>
                    </a>
                </div>

                
            </div>
        </div>
    </div>
    <div class="container-fluid">
        <div class="row">
        <div class="col-md-4 order-md-2 mb-4">
            <h4 class="mb-3">Server</h4>
            <div class="card">
                <ul class="list-group list-group-flush mb-3">
                    <li class="list-group-item d-flex justify-content-between lh-condensed">
                        <div>
                            <small class="text-muted">Server</small>
                            <h6 class="my-0">@Environment.MachineName</h6>
                        </div>
                        <span class="text-muted"></span>
                    </li>
                    <li class="list-group-item d-flex justify-content-between lh-condensed">
                        <div>
                            <small class="text-muted">OS</small>
                            <h6 class="my-0">@Environment.OSVersion</h6>
                        </div>
                        <span class="text-muted"></span>
                    </li>
                    <li class="list-group-item d-flex justify-content-between lh-condensed">
                        <div class="container pl-0 pr-0">
                            <div class="row">
                                <div class="col-md-6">
                                    <small class="text-muted">Cores</small>
                                    <h6 class="my-0">@Environment.ProcessorCount</h6>
                                </div>
                                <div class="col-md-6">
                                    <small class="text-muted">Memory</small>
                                    <h6 class="my-0">@(Environment.WorkingSet/1024/1024) MB</h6>
                                </div>
                            </div>
                        </div>
                    </li>
                    <li class="d-none list-group-item d-flex justify-content-between lh-condensed">
                        <div>
                            <small class="text-muted">User</small>
                            <h6 class="my-0">@Environment.UserDomainName\@Environment.UserName</h6>
                        </div>
                        <span class="text-muted"></span>
                    </li>
                </ul>
            </div>
        </div>
        <div class="col-md-8 order-md-1">
            <h4 class="mb-3">Requests</h4>
            <div class="card">
                <h6>
                    <table class="table anim" id="requests">
                        <thead>
                            <tr>
                                <th scope="col"></th>
                                <th scope="col">Code</th>
                                <th scope="col">Method</th>
                                <th scope="col">Path</th>
                                <th scope="col">Duration</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var request in Model.Requests.OrderByDescending(r => r.Date).Take(50))
                            {
                                <tr class="in" id="@request.Id">
                                    <td class="@GetColorClass(request.Status)"><div><i class="fas fa-circle"></i></div></td>
                                    <td class="@GetColorClass(request.Status)"><div>@request.Status</div></td>
                                    <td><div>@request.Method</div></td>
                                    <td><div>@request.Path</div></td>
                                    <td><div>@request.Duration ms</div></td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </h6>
            </div>
        </div>
    </div>
</div>

    <script type="text/javascript">

        const Http = new XMLHttpRequest();
        const url = '/healthz';
        Http.open("GET", url);
        Http.send();

        Http.onreadystatechange = (e) => {
            document.getElementsByClassName('healthz-checking')[0].style.display = 'none';
            if (Http.status.toString()[0] == '2') {
                document.getElementsByClassName('healthz-healthy')[0].classList.remove("d-none");
            }
            else {
                if (Http.status.toString()[0] == '4') {
                    document.getElementsByClassName('healthz-none')[0].classList.remove("d-none");
                }
                else {
                    document.getElementsByClassName('healthz-unhealthy')[0].classList.remove("d-none");
                }
            }
        }

    </script>

</body>
</html>

@{ 
    string GetColorClass(string status)
    {
        if (string.IsNullOrEmpty(status))
            return "";

        if(status.StartsWith('2'))
            return "text-success";

        if (status.StartsWith('3'))
            return "text-success";

        if (status.StartsWith('4'))
            return "text-warning";

        if (status.StartsWith('5'))
            return "text-danger";

        return "";
    }
}